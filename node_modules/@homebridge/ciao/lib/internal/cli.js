"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const index_1 = (0, tslib_1.__importDefault)(require("../index"));
const txt = {
    md: "My Accessory",
    pv: "1.1",
    id: "A1:00:0A:92:7D:1D",
    "c#": "1",
    "s#": "1",
    "ff": "0",
    "ci": 11,
    "sf": "1",
    "sh": "aaaaab",
};
const txt2 = {
    md: "My Accessory2",
    pv: "1.1",
    id: "A1:00:0A:92:7D:1D",
    "c#": "1",
    "s#": "1",
    "ff": "0",
    "ci": 11,
    "sf": "1",
    "sh": "aaaaac",
};
const responder = index_1.default.getResponder({
    interface: ["en8"],
    ignoreUnicastResponseFlag: false,
});
const service = responder.createService({
    name: "My Accessory2",
    type: "hap" /* HAP */,
    txt: txt,
});
const service2 = responder.createService({
    name: "My Accessory2",
    type: "hap" /* HAP */,
    txt: txt2,
});
service.updatePort(1234);
service2.updatePort(5123);
service.advertise().then(() => {
    console.log("Advertised service1");
});
setTimeout(() => {
    service2.advertise().then(() => {
        console.log("Advertised service 2");
    });
}, 10);
/*
setTimeout(() => {
  service.end();
  responder.shutdown();
}, 260);
*/
const exitHandler = (signal) => {
    Promise.all([responder.shutdown(),
        //responder2.shutdown(),
    ])
        .then(() => {
        process.exit(128 + signal);
    });
};
process.on("SIGINT", exitHandler.bind(undefined, 2));
process.on("SIGTERM", exitHandler.bind(undefined, 15));
//# sourceMappingURL=cli.js.map